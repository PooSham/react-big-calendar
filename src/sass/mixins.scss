/*
 * Mixins and functions inspired by 
 * https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables
 */

@mixin defineColorRGB($color, $rgb) {
  #{$color}: unquote('rgb(#{red($rgb)}, #{green($rgb)}, #{blue($rgb)})');
  #{$color}-r: #{$red};
  #{$color}-g: #{$green};
  #{$color}-b: #{$blue};
}

@function alpha($color, $opacity) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-r: var(#{$color + '-r'});
  $color-g: var(#{$color + '-g'});
  $color-b: var(#{$color + '-b'});
  @return rgba($color-r, $color-g, $color-b, $opacity);
}

@function darken($color, $opacity) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-r: var(#{$color + '-r'});
  $color-g: var(#{$color + '-g'});
  $color-b: var(#{$color + '-b'});
  @return rgba($color-r, $color-g, $color-b, $opacity);
}

// replace substring with another string
// credits: https://css-tricks.com/snippets/sass/str-replace-function/
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }
  @return $string;
}
